{"ast":null,"code":"const delta = 100;\nexport default function () {\n  const els = document.querySelectorAll('.js-parallax-me');\n  Array.from(els).forEach(el => {\n    const speed = el.hasAttribute('data-prlx-speed') ? parseInt(el.dataset.prlxSpeed, 10) : 1;\n\n    if (el.hasAttribute('data-prlx-from-top')) {\n      // el.style.transform = 'translateY(0px)';\n      el.style.top = '-' + delta * speed / 3 + 'px';\n      el.style.bottom = '-' + delta * speed + 'px';\n    } else {\n      // el.style.transform = 'translateY(' + delta / 2 + 'px)';\n      el.style.top = '-' + delta * speed / 2 + 'px';\n      el.style.bottom = '-' + delta * speed / 2 + 'px';\n    }\n  });\n\n  function translate(e) {\n    const innerHeight = window.innerHeight;\n    Array.from(els).forEach(el => {\n      const speed = el.hasAttribute('data-prlx-speed') ? parseInt(el.dataset.prlxSpeed, 10) : 1;\n      const elementTop = el.getBoundingClientRect().top;\n      const parentHeight = el.parentElement.getBoundingClientRect().height;\n      if (elementTop + parentHeight < 0 || elementTop > innerHeight) return;\n\n      if (el.hasAttribute('data-prlx-from-top')) {\n        const inFor = 1 - (elementTop + parentHeight) / parentHeight;\n        const deltaVariation = inFor * (delta * speed);\n        el.style.transform = 'translate3D(0, ' + -deltaVariation + 'px, 0)';\n      } else {\n        const inFor = 1 - (elementTop + parentHeight) / (innerHeight + parentHeight);\n        const deltaVariation = inFor * (delta * speed);\n        el.style.transform = 'translate3D(0, ' + (-deltaVariation + delta * speed / 2) + 'px, 0)';\n      }\n    });\n  }\n\n  window.addEventListener('scroll', translate);\n  translate();\n}","map":{"version":3,"sources":["/Users/cchan/Documents/GitHub/gpea-hongkong-pet-general_mc/src/scripts/parallax.js"],"names":["delta","els","document","querySelectorAll","Array","from","forEach","el","speed","hasAttribute","parseInt","dataset","prlxSpeed","style","top","bottom","translate","e","innerHeight","window","elementTop","getBoundingClientRect","parentHeight","parentElement","height","inFor","deltaVariation","transform","addEventListener"],"mappings":"AAAA,MAAMA,KAAK,GAAG,GAAd;AAEA,eAAe,YAAW;AACxB,QAAMC,GAAG,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,iBAA1B,CAAZ;AAEAC,EAAAA,KAAK,CAACC,IAAN,CAAWJ,GAAX,EAAgBK,OAAhB,CAAwBC,EAAE,IAAI;AAC5B,UAAMC,KAAK,GAAGD,EAAE,CAACE,YAAH,CAAgB,iBAAhB,IACVC,QAAQ,CAACH,EAAE,CAACI,OAAH,CAAWC,SAAZ,EAAuB,EAAvB,CADE,GAEV,CAFJ;;AAGA,QAAIL,EAAE,CAACE,YAAH,CAAgB,oBAAhB,CAAJ,EAA2C;AACzC;AACAF,MAAAA,EAAE,CAACM,KAAH,CAASC,GAAT,GAAe,MAAOd,KAAK,GAAGQ,KAAT,GAAkB,CAAxB,GAA4B,IAA3C;AACAD,MAAAA,EAAE,CAACM,KAAH,CAASE,MAAT,GAAkB,MAAMf,KAAK,GAAGQ,KAAd,GAAsB,IAAxC;AACD,KAJD,MAIO;AACL;AACAD,MAAAA,EAAE,CAACM,KAAH,CAASC,GAAT,GAAe,MAAOd,KAAK,GAAGQ,KAAT,GAAkB,CAAxB,GAA4B,IAA3C;AACAD,MAAAA,EAAE,CAACM,KAAH,CAASE,MAAT,GAAkB,MAAOf,KAAK,GAAGQ,KAAT,GAAkB,CAAxB,GAA4B,IAA9C;AACD;AACF,GAbD;;AAeA,WAASQ,SAAT,CAAmBC,CAAnB,EAAsB;AACpB,UAAMC,WAAW,GAAGC,MAAM,CAACD,WAA3B;AACAd,IAAAA,KAAK,CAACC,IAAN,CAAWJ,GAAX,EAAgBK,OAAhB,CAAwBC,EAAE,IAAI;AAC5B,YAAMC,KAAK,GAAGD,EAAE,CAACE,YAAH,CAAgB,iBAAhB,IACVC,QAAQ,CAACH,EAAE,CAACI,OAAH,CAAWC,SAAZ,EAAuB,EAAvB,CADE,GAEV,CAFJ;AAGA,YAAMQ,UAAU,GAAGb,EAAE,CAACc,qBAAH,GAA2BP,GAA9C;AACA,YAAMQ,YAAY,GAAGf,EAAE,CAACgB,aAAH,CAAiBF,qBAAjB,GAAyCG,MAA9D;AACA,UAAIJ,UAAU,GAAGE,YAAb,GAA4B,CAA5B,IAAiCF,UAAU,GAAGF,WAAlD,EAA+D;;AAC/D,UAAIX,EAAE,CAACE,YAAH,CAAgB,oBAAhB,CAAJ,EAA2C;AACzC,cAAMgB,KAAK,GAAG,IAAI,CAACL,UAAU,GAAGE,YAAd,IAA8BA,YAAhD;AACA,cAAMI,cAAc,GAAGD,KAAK,IAAIzB,KAAK,GAAGQ,KAAZ,CAA5B;AACAD,QAAAA,EAAE,CAACM,KAAH,CAASc,SAAT,GAAqB,oBAAoB,CAACD,cAArB,GAAsC,QAA3D;AACD,OAJD,MAIO;AACL,cAAMD,KAAK,GACT,IAAI,CAACL,UAAU,GAAGE,YAAd,KAA+BJ,WAAW,GAAGI,YAA7C,CADN;AAEA,cAAMI,cAAc,GAAGD,KAAK,IAAIzB,KAAK,GAAGQ,KAAZ,CAA5B;AACAD,QAAAA,EAAE,CAACM,KAAH,CAASc,SAAT,GACE,qBACC,CAACD,cAAD,GAAmB1B,KAAK,GAAGQ,KAAT,GAAkB,CADrC,IAEA,QAHF;AAID;AACF,KApBD;AAqBD;;AAEDW,EAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCZ,SAAlC;AACAA,EAAAA,SAAS;AACV","sourcesContent":["const delta = 100;\n\nexport default function() {\n  const els = document.querySelectorAll('.js-parallax-me');\n\n  Array.from(els).forEach(el => {\n    const speed = el.hasAttribute('data-prlx-speed')\n      ? parseInt(el.dataset.prlxSpeed, 10)\n      : 1;\n    if (el.hasAttribute('data-prlx-from-top')) {\n      // el.style.transform = 'translateY(0px)';\n      el.style.top = '-' + (delta * speed) / 3 + 'px';\n      el.style.bottom = '-' + delta * speed + 'px';\n    } else {\n      // el.style.transform = 'translateY(' + delta / 2 + 'px)';\n      el.style.top = '-' + (delta * speed) / 2 + 'px';\n      el.style.bottom = '-' + (delta * speed) / 2 + 'px';\n    }\n  });\n\n  function translate(e) {\n    const innerHeight = window.innerHeight;\n    Array.from(els).forEach(el => {\n      const speed = el.hasAttribute('data-prlx-speed')\n        ? parseInt(el.dataset.prlxSpeed, 10)\n        : 1;\n      const elementTop = el.getBoundingClientRect().top;\n      const parentHeight = el.parentElement.getBoundingClientRect().height;\n      if (elementTop + parentHeight < 0 || elementTop > innerHeight) return;\n      if (el.hasAttribute('data-prlx-from-top')) {\n        const inFor = 1 - (elementTop + parentHeight) / parentHeight;\n        const deltaVariation = inFor * (delta * speed);\n        el.style.transform = 'translate3D(0, ' + -deltaVariation + 'px, 0)';\n      } else {\n        const inFor =\n          1 - (elementTop + parentHeight) / (innerHeight + parentHeight);\n        const deltaVariation = inFor * (delta * speed);\n        el.style.transform =\n          'translate3D(0, ' +\n          (-deltaVariation + (delta * speed) / 2) +\n          'px, 0)';\n      }\n    });\n  }\n\n  window.addEventListener('scroll', translate);\n  translate();\n}\n"]},"metadata":{},"sourceType":"module"}